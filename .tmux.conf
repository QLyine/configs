# Based on Archlinux's vim style tmux configuration

# Make it use C-q
unbind C-b
set -g prefix C-s
bind s send-prefix # these last to allow C-q to be passed through
bind C-s send-prefix
#
# # Unbind existing tmux key bindings, except a few that are commented out.
 unbind C-o
 unbind C-z
 unbind Space
 unbind !
 unbind '"'
 unbind '#'
 unbind %
 unbind &
 unbind "'"
 unbind ,
 unbind -
 unbind .
 unbind :
 unbind =
 unbind ?
 unbind D
 unbind '['
 unbind ']'
 unbind c
 unbind d
 unbind f
 unbind i
 unbind l
 unbind n
 unbind o
 unbind p
 unbind q
 unbind r
 unbind s
 unbind t
 unbind w
 unbind x
 unbind '{'
 unbind '}'
 unbind '~'
 unbind PPage
 unbind Up
 unbind Down
 unbind Left
 unbind Right
 #unbind 0
 #unbind 1
 #unbind 2
 #unbind 3
 #unbind 4
 #unbind 5
 #unbind 6
 #unbind 7
 #unbind 8
 #unbind 9
 unbind M-1
 unbind M-2
 unbind M-3
 unbind M-4
 unbind M-5
 unbind M-n
 unbind M-o
 unbind M-p
 unbind M-Up
 unbind M-Down
 unbind M-Left
 unbind M-Right
 unbind C-Up
 unbind C-Down
 unbind C-Left
 unbind C-Right

# basic window operations
unbind c
bind c new-window
unbind & # purposefully diffcult combination, better the shell's "C-d", or
bind C-d confirm-before kill-window
unbind x # close pane (if last also the window)
bind x confirm-before kill-pane

#urxvt tab like window switching (-n: no prior escape seq)
bind -n S-down new-window
bind -n S-left prev
bind -n S-right next
bind -n C-left swap-window -t -1
bind -n C-right swap-window -t +1

# # find a window by name
unbind f
bind f command-prompt "find-window '%%'"

# rename a window (gnuscreen default shortcut)
unbind A
bind A command-prompt "rename-window %%"

# backspace for last active window
unbind Tab
bind -r Tab last-window

# number panes visibly
unbind q
bind q display-panes

# # cycle through pane layouts
unbind Space
bind -r Space next-layout

# display key bindings
unbind ?
bind ? list-keys

# apply the config file again...
unbind r
bind r source-file ~/.tmux.conf

# window title
set -g set-titles on
setw -g automatic-rename on
#

set-option -g status-utf8 on

# default statusbar colors
set -g status-fg white
set -g status-bg default
#
# # default window title colors
set-window-option -g window-status-fg white
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim
#
# # active window title colors
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright
#
# # statusline
#set -g status-left '#[fg=green][ #H ]['
#set -g status-right '#[fg=green]][ #[fg=blue]%Y-%m-%d #[fg=white]%I:%M# #[fg=green]]'

set-window-option -g window-status-current-format "#[fg=red](#[fg=white]#I#F$ #W#[fg=red])"
set-window-option -g window-status-format "#[fg=normal]#I#F$ #W"

# Support for 256 colors
set -g default-terminal "screen-256color"

# Window index base 1
set -g base-index 1

# split windows
bind s split-window -v
bind v split-window -h

# move around panes with hjkl
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# move panes around with HL
bind H swap-pane -U
bind L swap-pane -D

# resize panes like vim
bind < resize-pane -L 5
bind > resize-pane -R 5
bind - resize-pane -D 5
bind + resize-pane -U 5

# bind : and ; to command-prompt like vim
bind : command-prompt
bind \; command-prompt

# switch windows with t and T (gt and gT in vim)
bind t next-window
bind T previous-window

# vi-style controls for copy mode
setw -g mode-keys vi
